name: Python Automation CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  run-automation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+')
          MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
          echo "Installed Chrome version: $CHROME_VERSION (major: $MAJOR_VERSION)"
          CHROMEDRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$MAJOR_VERSION")
          if [[ ! $CHROMEDRIVER_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "No valid Chromedriver release found for major version $MAJOR_VERSION."
            echo "Falling back to generic latest Chromedriver release."
            CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          fi
          echo "Chromedriver version to download: $CHROMEDRIVER_VERSION"
          wget "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/

      - name: Run Block Site Visit Script
        env:
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          TENANT_URL: ${{ secrets.TENANT_URL }}
          ASSIGNED_USERNAME: ${{ secrets.ASSIGNED_USERNAME }}
          ASSIGNED_PASSWORD: ${{ secrets.ASSIGNED_PASSWORD }}
          BROWSER: ${{ secrets.BROWSER }}
          POLICY_TYPE: ${{ secrets.POLICY_TYPE }}
        run: python Block_site_visit_AI_manual.py

      # - name: Upload Artifacts
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: automation-artifacts
      #     path: artifacts/
